name: Terraform Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  plan:
    name: Terraform Plan (${{ inputs.environment }})
    runs-on: ubuntu-latest
    # permissions:
    #   id-token: write
    outputs:
      apply_needed: ${{ steps.plan-check.outputs.apply_needed }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.3
          terraform_wrapper: false
          
      - name: Terraform Init
        working-directory: ./${{ inputs.environment }}
        run: terraform init

      - name: Terraform Plan
        id: plan-check
        shell: bash
        working-directory: ./${{ inputs.environment }}
        env:
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          set +e
          terraform plan -detailed-exitcode -out=${{ inputs.environment }}.plan --var-file="${{ inputs.environment }}.tfvars"
          retVal=$?
          echo "Terraform exit code: $retVal"
          
          if [ $retVal -eq 0 ]; then
            echo "No changes to apply"
            echo "apply_needed=false" >> $GITHUB_OUTPUT
          elif [ $retVal -eq 2 ]; then
            echo "Changes detected to apply"
            echo "apply_needed=true" >> $GITHUB_OUTPUT
          else
            echo "Terraform plan failed"
            exit 1
          fi

      # - name: View Plan
      #   if: steps.plan-check.outputs.apply_needed == 'true'
      #   working-directory: ./${{ inputs.environment }}
      #   run: terraform show -no-color ${{ inputs.environment }}.plan > tfplan.txt

      - name: Upload Plan Binary
        if: steps.plan-check.outputs.apply_needed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./${{ inputs.environment }}/${{ inputs.environment }}.plan

  apply:
    name: Terraform Apply (${{ inputs.environment }})
    runs-on: ubuntu-latest
    needs: plan
    if: needs.plan.outputs.apply_needed == 'true'
    environment: ${{ inputs.environment }}
    # permissions:
    #   id-token: write
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.3

      - name: Terraform Init
        working-directory: ./${{ inputs.environment }}
        run: terraform init

      - name: Download Plan File
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ./${{ inputs.environment }}

      - name: Terraform Apply
        working-directory: ./${{ inputs.environment }}
        run: terraform apply -auto-approve ${{ inputs.environment }}.plan
        env:
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
